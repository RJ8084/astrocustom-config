# ~/.zshrc: Modern zsh configuration with contemporary tools

# Return if not interactive
[[ $- != *i* ]] && return

# Enable Powerlevel10k instant prompt (should stay close to the top)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# History configuration (modern approach)
HISTFILE=~/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_ALL_DUPS

# Modern zsh options
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt EXTENDED_GLOB

setopt COMPLETE_ALIASES
setopt ALWAYS_TO_END
setopt AUTO_MENU
setopt AUTO_LIST
setopt AUTO_PARAM_SLASH
setopt FLOW_CONTROL

# Initialize modern completion system
autoload -Uz compinit
if [[ -n ~/.zcompdump(#qN.mh+24) ]]; then
  compinit
else
  compinit -C
fi

# Oh My Zsh installation path
export ZSH="$HOME/.oh-my-zsh"

# Theme - using Powerlevel10k (modern alternative to bash prompts)
ZSH_THEME="powerlevel10k/powerlevel10k"

# Plugins (modern zsh tools)
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-completions
  z 
  colored-man-pages
)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Modern tool alternatives to traditional Unix tools
# Use exa instead of ls (if available)
if command -v exa &> /dev/null; then
  alias ls='exa --color=auto --group-directories-first'
  alias ll='exa -la --color=auto --group-directories-first'
  alias la='exa -a --color=auto --group-directories-first'
  alias l='exa -F --color=auto --group-directories-first'
  alias tree='exa --tree'
  
else
  # Fallback to traditional ls with colors
  alias ls='ls --color=auto'
  alias ll='ls -alF'
  alias la='ls -A'
  alias l='ls -CF'
fi

# Use bat instead of cat (if available)
if command -v bat &> /dev/null; then
  alias cat='bat --paging=never'
  alias bcat='bat'
fi

# Use fd instead of find (if available)
if command -v fd &> /dev/null; then
  alias find='fd'
fi

# Use ripgrep instead of grep (if available)
if command -v rg &> /dev/null; then
  alias grep='rg'
else
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# Use dust instead of du (if available)
if command -v dust &> /dev/null; then
  alias du='dust'
fi

# Use procs instead of ps (if available)
if command -v procs &> /dev/null; then
  alias ps='procs'
fi

# other alias
alias cls='clear'
alias q='exit'
alias btm='btm'
alias clsh='rm ~/.zsh_history' 
alias updateall='sudo apt update && sudo apt upgrade -y'
alias sound='alsamixer -c 1'





# Advanced completion styling


# Modern history search with fzf (if available)
if command -v fzf &> /dev/null; then
  source <(fzf --zsh)
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
  
  # Advanced fzf options
  export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --inline-info'
  export FZF_CTRL_T_OPTS="--preview 'bat --color=always --style=header,grid --line-range :300 {}'"
  export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
fi

# Lazy loading for Node.js/NVM (performance optimization)
export NVM_DIR="$HOME/.nvm"
export NVM_LAZY_LOAD=true
export NVM_COMPLETION=true

# Function to lazy load nvm
load_nvm() {
  if [[ -s "$NVM_DIR/nvm.sh" ]]; then
    source "$NVM_DIR/nvm.sh"
    [[ -s "$NVM_DIR/bash_completion" ]] && source "$NVM_DIR/bash_completion"
  fi
}

# Lazy loading wrapper functions
for cmd in node npm npx nvm; do
  eval "${cmd}() {
    unset -f node npm npx nvm
    load_nvm
    ${cmd} \"\$@\"
  }"
done

# Rust/Cargo environment
if [[ -f "$HOME/.cargo/env" ]]; then
  source "$HOME/.cargo/env"
fi

# Modern path additions
typeset -U PATH path
path=(
  "$HOME/.local/bin"
  "$HOME/bin"
  "$HOME/.cargo/bin"
  "$HOME/.deno/bin"
  "$HOME/go/bin"
  "$path[@]"
)

# Environment variables for modern tools




# Custom functions
# Extract archives
extract() {
  if [[ -f $1 ]]; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar x $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *) echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Create directory and cd into it
mkcd() {
  mkdir -p "$1" && cd "$1"
}

# Load Powerlevel10k configuration
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Load additional completions
if [[ -d ~/.zsh/completions ]]; then
  fpath=(~/.zsh/completions $fpath)
fi

# Performance: compile zsh configuration if needed
if [[ ~/.zshrc -nt ~/.zshrc.zwc ]]; then
  zcompile ~/.zshrc
fi
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# other

